
1、UART0 用来打印调试信息，依赖于 通用定时器TIMER1，TIMER1须定时周期为1ms， 所以，修改SCLK0时，务必 注意 修改 ：波特率 和 TIMER1的周期计数值。 (add by wjm @2015-5-5 )

2、issue_eth_201505061:
现象：仅仅 两个点对点转发 任务，5号晚上测试到11点多开始都有丢帧现象，eth0：44点；eht1： 56203个 
现场：使用 xl-620 输出两路SV报文，通道数60，其他默认配置.
方法：在转发前，进行完整性分析（仅仅用于现在这个特定情况，通用的报文分析没有做），使用UART0 输出调试信息。


3、issue_ad_exeth_eth_201505062:
现象：1个点对点转发 任务，1秒一个采样脉冲给AD，AD采样数据经exeth转发，对点对点网口eth0、eht1的接收数据帧截断
现场：使用 xl-620 输出1路SV报文，通道数60，其他默认配置.

step1
(2015-5-6)
目的：排查是否是因为 AD采样数据经过exeth转发造成的？
方法：将AD采样数据使用eth1 转发。
现象：eth0接收丢帧、数据异常，exeth转发丢帧；
说明： AD采样数据经过exeth转发 不是影响因素。

step2
(2015-5-7)
目的：排查 是否是因为 AD采样数据 处理引起的，CPU处理不过来
方法：SCLK0：80MHz, PTP: 40MHz;1个点对点转发 任务，对时，1秒4000采样脉冲给AD，AD采样数据不做处理;
现象：对点对点网口eth0/eht1的接收数据帧丢帧、异常；exeth发送丢帧.

step3
(2015-5-7)
目的：排查 是否 因为 AD的中断过多引起的，
方法：SCLK0：80MHz, PTP: 40MHz;1个点对点转发 任务，对时，1秒4000采样脉冲给AD，AD采样数据不做处理，屏蔽AD的中断；
现象：对点对点网口eth0/eht1的接收数据帧丢帧、异常；exeth发送丢帧.
说明中断次数 不是影响因素。

step4
(2015-5-7)
目的：排查 是否 是AD工作 时信号影响引起的，
方法：SCLK0：80MHz, PTP: 40MHz;1个点对点转发 任务，屏蔽对时任务，这时AD没有工作
现象：对点对点网口eth0/eht1的接收数据帧正常，exeth发送正常，测试1小时。
说明 AD工作 可能是影响因素。
(实际上，屏蔽了对时任务会带来两个影响：1、没有采样脉冲，AD不在工作；2、没有对时中断处理；所以，AD工作、对时中断处理 都是可能的影响因素，
但是我却忽略了第2个，原因是先入为主认为硬件错误而不是软件错误。)

step5
(2015-5-7)
目的：排查 是否是 对时中断处理引起的，(控制条件：AD工作，是否有对时中断)
方法：SCLK0：80MHz, PTP: 40MHz;1个点对点转发 任务，输出4KPPS给AD，屏蔽AD中断（AD硬件在工作，但软件不做处理），
                                             对时任务，去掉标准PPS，这样就没有对时中断了；
现象：测试1小时没有之前的异常情况；接上标准PPS信号（有对时中断）后，测试20分钟，出现之前的异常。
试验：晚上，去掉标准PPS，测试11小时，无异常出现。
说明：对时中断确实是直接影响因素。

step6
(2015-5-8)
目的：排查 是否 是对时中断 那部分代码引起了异常，
方法：SCLK0：80MHz, PTP: 40MHz;1个点对点转发 任务，输出4KPPS给AD，屏蔽AD中断（AD硬件在工作，但软件不做处理），
              对时任务，但是对时处理中直接返回。
现象:测试20分钟，出现了 之前的异常。
说明：在调用对时中断处理代码之前的代码 可能是影响因素，多一个对时中断 也可能是 影响因素。

step7
(2015-5-8)
目的：排查 是否是 调用对时中断处理代码之前的代码 引起了异常，
方法：SCLK0：80MHz, PTP: 40MHz;1个点对点转发 任务，输出4KPPS给AD，屏蔽AD中断（AD硬件在工作，但软件不做处理），
              对时任务，但是对时处理中直接返回；在进入 EMAC中断时，改变 中断处理顺序：先处理网口中断，再处理 PTP模块的中断。
现象：测试2小时无异常。
            恢复到 原来的中断处理顺序：先处理 PTP模块的中断，再处理网口中断。测试2小时，无异常。
检查代码发现：原来把 AD初始化代码注释掉了，没有AD(方法中AD硬件在工作 这一条不满足)，工作当然是正常的了。唉，粗心大意，浪费时间。

重回step5.

step8
(2015-5-8)
目的：排查 是否是 对时中断处理引起的，(控制条件：AD工作，是否有对时中断)
方法：SCLK0：80MHz, PTP: 40MHz;1个点对点转发 任务，输出4KPPS给AD，初始化AD，不初始化中断，不注册中断处理（即硬件上AD正常工作有中断，但软件上不处理）;
现象： 对时任务，接收PPS,对时处理中直接返回不调整系统时间；测试，出现了 之前的异常。     
           对时任务，不接收PPS,无对时处理；测试，出现了 之前的异常。  
结论： 说明 异常与 对时中断处理 无关。
           
step9
(2015-5-9)
目的：排查 是否是 AD工作 时信号影响引起的，
方法：SCLK0：80MHz, PTP: 40MHz;1个点对点转发 任务，输出4KPPS给AD，初始化AD，不初始化中断，不注册中断处理（即硬件上AD正常工作有中断，但软件上不处理）;
            对时任务，接收PPS。 
现象：将 AD的中断信号 与DSP的管脚间接线切断（FPGA编程） ，测试5小时，无异常。  
           将 AD的中断信号 与DSP的管脚间接线连接（FPGA编程） ，测试50分钟，2个丢帧。
           将 AD的中断信号 与DSP的管脚间接线切断（FPGA编程） ，测试3小时，无异常。



4、issue_ad_exeth_rx_201505121:
现象：加入AD功能代码，测试扩展网口接收功能，发现 接收异常；
现场：使用DM9K_Test2.exe 发送报文给exeth，打印报文长度.

(2015-5-12)
1)注释AD功能代码（硬件上，中断信号与DSP的管脚PD06切断）， 单独测试扩展网口接收功能，DM9000A的中断信号为脉冲，接收正常；1000帧，间隔100ms，OK；
2)打开AD功能代码（硬件上，中断信号与DSP的管脚PD06切断），单独测试扩展网口接收功能，DM9000A的中断信号为高电平，1000帧，间隔100ms；

(2015-5-13)
3)注释AD功能代码,逐个函数进行注释，（硬件上，中断信号与DSP的管脚PD06切断）， 单独测试扩展网口接收功能，
       直到Init_AD7608_IO/adi_gpio_Init被注释后，exeth能正常接收。
原因：查看adi_gpio_Init的源代码，发现该函数只能被调用一次，否则会覆盖之前调用时提交的mem（里面保存有callback ，PinID等）。
          检查发现在之前已经调用了2次（dev_gpio.c ， dri_dm9000a.c），在这里调用后，就覆盖了dri_dm9000a.c中的callback 设置。
结论：adi_gpio_Init在整个工程中只能调用一次。
	修改后单独测试 上层通讯协议，OK。
	
(2015-5-14)
4)打开AD功能代码（硬件上，中断信号与DSP的管脚PD06连接,软件上处理中断），
使用DM9K_Test2.exe 、DM9K_LenAdd.exe 发包，DM9000A异常无法工作；
5）屏蔽AD功能中断处理代码（硬件上，中断信号与DSP的管脚PD06连接,软件上只做初始化），
使用DM9K_Test2.exe发包，DM9000A接收 丢帧；
使用DM9K_LenAdd.exe 发包， DM9000A接收有错帧、丢帧。

	
(2015-5-18)
6)打开AD功能代码（硬件上，中断信号与DSP的管脚PD06连接,软件上处理中断），
修改：(1)使用轮询方式获取 管脚PD09（DM9000A的rx）中断状态;
(2)在dm9000a 的rx中断处理中，使用DMA方式搬运rx数据，而不是原来的core搬运（如果用这个方式需要屏蔽中断）。
使用DM9K_Test2.exe 、DM9K_LenAdd.exe 发包，DM9000A丢帧，可以正常运行；
AD的采样数据通过网口1转发，无丢帧。

5.
在 解决issue_ad_exeth_rx_201505121 基础上，继续debug issue_ad_exeth_eth_201505062：
step10
(2015-5-18)
目的：由step9可知，AD工作 时信号影响是可能的，影响因素应该是 硬件上的；使用新的核心板测试，排除是否 是 核心板的问题；
方法：同step9
现象：同step9.
结论：与核心板无关。

step11
(2015-5-19)
目的：由step9可知，AD工作 时信号影响是可能的，影响因素应该是 硬件上的；使用转发板测试，排除是否 是 底板的问题；
方法：转发板 无AD模块，外部给4KPPS给PG08，用PG08代替PD06模拟 AD的BUSY中断，但是 在BUSY中断中不做处理直接返回，与step9相比，就少了4K/s个MDMA中断。
现象：测试3小时，无异常，无丢帧.

step12
(2015-5-20)
目的：是否是 PD06管脚问题，
方法：使用  PG08代替PD06，底板，BUSY中断链接到PG08，ETH0发送AD数据报文。
现象：测试3小时，无异常，无丢帧. 
           使用MUT6100测试，使用其完整性测试功能测试AD数据报文的完整性，发现当按下“停止测试”的时候，会出现 点对点接收数据异常，总共12-13个异常后，又恢复正常，
           发现打印出来的错误个数 比实际丢帧数多1个；修改打印错误提示信息（区分是哪个网口的错误），重新测试，结果发现 第一个错误 居然是ETH0 接收数据异常，然后出现 连续11-12个ETH1数据异常，之后恢复正常。
结论：难道是 因为测试工具MUT6100按下“停止测试”的时候，反馈的报文影响到点对点网口1？

step13
(2015-5-21)
目的：单独测试 两个点对点接收
方法：使用XL805_AD_borad(硬件上有中断信号链接到PD06)，AD的代码屏蔽。（硬件上有中断信号链接到PD06）。
现象：  测试11分钟，网口0 丢帧（网口0接收数据异常）。        
              使用转发板（使用PG08代替PD06） 测试，硬件上有中断信号链接到PG08，中断函数不做处理，测试2个小时无异常。 

step14
(2015-5-21)
目的：是否是 PD06管脚问题，单独测试 两个点对点接收
方法：使用  PG08代替PD06，底板，BUSY中断链接到PG08，AD的代码屏蔽。
现象： 测试2小时，无异常。          
结论：应该 用PG08代替PD06作为 ad7608的BUSY 中断接口。

step 15
(2015-5-21)
目的：测试AD + ETH
方法：使用  PG08代替PD06，BUSY中断链接到PG08，AD 工作（读取数据，组帧，exeth发送）， eth1接收转发
现象：测试几十秒，eth1接收数据异常，网口溢出

step 16
(2015-5-21)
目的：测试AD + ETH
方法：使用  PG08代替PD06，BUSY中断链接到PG08，AD 工作（读取数据）， eth0、 eth1接收转发
现象：测试30分钟 eth0,eth1 OK。

step 17
(2015-5-21)
目的：测试AD + ETH
方法：使用  PG08代替PD06，BUSY中断链接到PG08，AD 工作（读取数据，组帧）， eth0、 eth1接收转发
现象：测试90分钟 eth0,eth1 OK。

step 18
(2015-5-21)
目的：测试AD + ETH
方法：使用  PG08代替PD06，BUSY中断链接到PG08，扩展网口使用三个发送队列分别对应2路点对点和一路AD采样数据，
    AD 工作（读取数据，组帧，exeth发送）， eth0、 eth1接收转发；
现象：测试16分钟eth1丢一帧；测试30分钟eth1溢出。

step19
(2015-5-21)
目的：测试AD + ETH
方法：使用  PG08代替PD06，BUSY中断链接到PG08，扩展网口使用三个发送队列分别对应2路点对点和一路AD采样数据，
     AD 工作（读取数据，组帧）， eth0、 eth1接收转发
现象：测试6h, eth0 接收数据帧异常,eth1丢帧（数据帧异常）。

step20
(2015-5-22)
目的：测试 ETH
方法：使用  PG08代替PD06，BUSY中断链接到PG08，扩展网口使用三个发送队列分别对应2路点对点和一路AD采样数据，发送队列关闭中断。
     AD 工作（只有BUSY中断）， eth0、 eth1接收转发
现象：测试转发版8小时，无丢帧；
   发送队列打开中断， 屏蔽AD代码，测试805板的点对点接收，测试8小时无丢帧。
    

step21
(2015-5-25)
目的：测试 ETH
方法：使用  PG08代替PD06，BUSY中断链接到PG08，扩展网口使用三个发送队列分别对应2路点对点和一路AD采样数据， 发送队列打开中断。
     AD 工作（读取数据）， eth0、 eth1接收转发
现象：
     测试805板的点对点接收，测试10分钟eth1接收数据异常。
      
step22
(2015-5-25)
目的：测试 ETH
方法：使用  PG08代替PD06，BUSY中断链接到PG08，扩展网口使用三个发送队列分别对应2路点对点和一路AD采样数据， 发送队列打开中断。
     AD 工作（读取数据,组帧，发送）， eth0、 eth1接收转发
现象：
     测试805板的点对点接收，测试4小时40分钟 eth1接收数据异常， exeth同时丢2帧数据。 

step23
(2015-5-25)
目的：测试 ETH
方法：使用  PG08代替PD06，BUSY中断链接到PG08，扩展网口使用三个发送队列分别对应2路点对点和一路AD采样数据， 发送队列打开中断。
            屏蔽AD 代码， eth, eth1接收转发
现象：
     805板的点对点接收，测试21小时 无异常。

   
step23
(2015-5-26)
目的：测试 ETH
方法：使用  PG08代替PD06，BUSY中断链接到PG08，扩展网口使用三个发送队列分别对应2路点对点和一路AD采样数据， 发送队列打开中断。
     AD 工作（读取数据,组帧，发送），  eth1接收转发
现象：
     805板的点对点接收，测试15小时 eth1接收无异常， AD无异常，exeth无异常。
      805板的点对点接收，测试10分钟， eth0接收异常， AD数据有丢帧。      
              注意，同样的代码在 新做的底板上测试，发现 DM9000A的setup都失败了。

step24
(2015-5-27)
目的：测试 ETH
方法：使用  PG08代替PD06，BUSY中断链接到PG08，扩展网口使用三个发送队列分别对应2路点对点和一路AD采样数据， 发送队列打开中断。
     AD 工作（读取数据,组帧，发送），  eth0接收转发
现象：
     805板的点对点接收，测试10分钟， eth0接收异常， AD数据有丢帧。      

step25
(2015-5-27)
目的：测试 ETH
方法：使用  PG08代替PD06，BUSY中断链接到PG08，扩展网口使用三个发送队列分别对应2路点对点和一路AD采样数据， 发送队列打开中断。
     AD 工作（读取数据,取消SPORT的DMA搬运，组帧，发送），  eth0接收转发
现象：
     805板的点对点接收，测试  5分钟出现eth0接收异常；  
     
step26
(2015-5-27)
目的：测试 ETH
方法：使用  PG08代替PD06，BUSY中断链接到PG08，扩展网口使用三个发送队列分别对应2路点对点和一路AD采样数据， 发送队列打开中断。
     AD 工作（读取数据,SPORT的DMA搬运，组帧，发送），加上PDO6的功能复用，  eth0接收转发
现象：
     805板的点对点接收，测试  3分钟出现转发数据丢帧；  测试9分钟ETH0出现接收数据异常；
     
     
     